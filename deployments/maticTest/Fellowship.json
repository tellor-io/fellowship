{
  "address": "0xcC8456Ea321968B65c6b0E06FeCf76c172510352",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellor",
          "type": "address"
        },
        {
          "internalType": "address[3]",
          "name": "_initialWalkers",
          "type": "address[3]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "NewWalker",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "NewWalker1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "input",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "output",
          "type": "bytes"
        }
      ],
      "name": "NewWalkerInformation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPerWalker",
          "type": "uint256"
        }
      ],
      "name": "RewardsPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "StakeWithdrawalRequestStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "StakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "WalkerBanished",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldWalker",
          "type": "address"
        }
      ],
      "name": "banishWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fellowship",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFellowshipSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        }
      ],
      "name": "getWalkerDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum Fellowship.Status",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_input",
          "type": "bytes32"
        }
      ],
      "name": "getWalkerInformation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_output",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        }
      ],
      "name": "isWalker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_i",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPayDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRivendell",
          "type": "address"
        }
      ],
      "name": "newRivendell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "newWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recieveReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestStakingWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rivendell",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setStakeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_input",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_output",
          "type": "bytes"
        }
      ],
      "name": "setWalkerInformation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_banish",
          "type": "bool"
        }
      ],
      "name": "slashWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tellor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walkers",
      "outputs": [
        {
          "internalType": "enum Fellowship.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fellowshipIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardBalance",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0e93f23278161bCa6F22D6268ca44691042ed437",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "3370814",
    "logsBloom": "0x
    "blockHash": "0x1aff40df1acb4d17689138ee919d378e344fb3e731610977736207ea52397332",
    "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 11636045,
        "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
        "address": "0xcC8456Ea321968B65c6b0E06FeCf76c172510352",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 0,
        "blockHash": "0x1aff40df1acb4d17689138ee919d378e344fb3e731610977736207ea52397332"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11636045,
        "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
        "address": "0xcC8456Ea321968B65c6b0E06FeCf76c172510352",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 1,
        "blockHash": "0x1aff40df1acb4d17689138ee919d378e344fb3e731610977736207ea52397332"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11636045,
        "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
        "address": "0xcC8456Ea321968B65c6b0E06FeCf76c172510352",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 2,
        "blockHash": "0x1aff40df1acb4d17689138ee919d378e344fb3e731610977736207ea52397332"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11636045,
        "transactionHash": "0x4e133926a2af6ea2e2fdbaaacae35396a12284c442b0b7a04af8265a1ca01060",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000e93f23278161bca6f22d6268ca44691042ed437",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000023ed366138c40000000000000000000000000000000000000000000000000006e4761d44eb560000000000000000000000000000000000000000000000003cacf15ad826f68e1800000000000000000000000000000000000000000000000006c088e6e3b2920000000000000000000000000000000000000000000000003cad15480e882f5218",
        "logIndex": 3,
        "blockHash": "0x1aff40df1acb4d17689138ee919d378e344fb3e731610977736207ea52397332"
      }
    ],
    "blockNumber": 11636045,
    "cumulativeGasUsed": "3370814",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
    [
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D"
    ]
  ],
  "solcInputHash": "cb8aa510ea578c8a626a66aa3633e331",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellor\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"_initialWalkers\",\"type\":\"address[3]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"NewWalker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"NewWalker1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"input\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"name\":\"NewWalkerInformation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerWalker\",\"type\":\"uint256\"}],\"name\":\"RewardsPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawalRequestStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"WalkerBanished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldWalker\",\"type\":\"address\"}],\"name\":\"banishWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fellowship\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFellowshipSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"}],\"name\":\"getWalkerDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum Fellowship.Status\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_input\",\"type\":\"bytes32\"}],\"name\":\"getWalkerInformation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_output\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"isWalker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_i\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRivendell\",\"type\":\"address\"}],\"name\":\"newRivendell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"newWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recieveReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rivendell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_input\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_output\",\"type\":\"bytes\"}],\"name\":\"setWalkerInformation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_banish\",\"type\":\"bool\"}],\"name\":\"slashWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tellor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walkers\",\"outputs\":[{\"internalType\":\"enum Fellowship.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fellowshipIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBalance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tellor Inc.\",\"details\":\"This contract holds the selected few chosen as part of the Fellowship*\",\"kind\":\"dev\",\"methods\":{\"banishWalker(address)\":{\"details\":\"Function to banish a walker\",\"params\":{\"_oldWalker\":\"address of walker to be banished (removed from Fellowship)*\"}},\"constructor\":{\"details\":\"Constructor for setting initial variables\",\"params\":{\"_initialWalkers\":\"an array of three addresses to serve as the initial walkers\",\"_tellor\":\"the address of the tellor contract\"}}},\"title\":\"Fellowship\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fellowship.sol\":\"Fellowship\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Fellowship.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.2;\\r\\n\\r\\nimport \\\"./interfaces/ERC20Interface.sol\\\";\\r\\n\\r\\n/****\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2003\\u2003\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2003\\u2003\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2003\\u2003\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u255a\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u255d\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2003\\u2003\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2554\\u2550\\u2588\\u2588\\u2588\\u2588\\u2551\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2003\\u2003\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\r\\n\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2003\\u2003\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\r\\n\\r\\n*****/\\r\\n\\r\\n/** \\r\\n @author Tellor Inc.\\r\\n @title Fellowship\\r\\n @dev This contract holds the selected few chosen as part of the Fellowship\\r\\n**/\\r\\ncontract Fellowship {\\r\\n    //Storage\\r\\n    enum Status {ACTIVE, INACTIVE, PENDING_WITHDRAW, UNFUNDED}\\r\\n\\r\\n    struct Walker {\\r\\n        Status status; //status of walker\\r\\n        uint256 date; //date the walker initally was chosen\\r\\n        uint256 fellowshipIndex; //index of walker in the fellowship array\\r\\n        uint256 balance; //TRB balance of walker (must be > stakeAmount to be ACTIVE)\\r\\n        uint256 rewardBalance; //balance of rewards they own\\r\\n        string name; //name of walker\\r\\n    }\\r\\n\\r\\n    uint256 public lastPayDate; //most recent date walkers were paid\\r\\n    uint256 public rewardPool; //sum of all payments for services in contract\\r\\n    uint256 public stakeAmount; //minimum amount each walker needs to stake\\r\\n    address public rivendell; //the address of the voting contract\\r\\n    address public tellor; //address of tellor (the token for staking and payments)\\r\\n\\r\\n    mapping(address => mapping(bytes32 => bytes)) information; //allows parties to store arbitrary information\\r\\n    mapping(address => Walker) public walkers; //a mapping of an address to their information as a Walker\\r\\n    mapping(address => uint256) public payments; //a mapping of an address to the payment amount they've given\\r\\n    //The Fellowship:\\r\\n    address[] public fellowship; //The array of chosen individuals who are part of the fellowship\\r\\n\\r\\n    //Events\\r\\n    event NewWalker1(address walker);\\r\\n    event NewWalker(address walker);\\r\\n    event NewWalkerInformation(address walker, bytes32 input, bytes output);\\r\\n    event WalkerBanished(address walker);\\r\\n    event StakeWithdrawalRequestStarted(address walker);\\r\\n    event StakeWithdrawn(address walker);\\r\\n    event PaymentDeposited(address payee, uint256 amount);\\r\\n    event RewardsPaid(uint256 rewardPerWalker);\\r\\n\\r\\n    //Modifiers\\r\\n    /**\\r\\n     * @dev This modifier restricts the function to only the Rivendell contract\\r\\n     */\\r\\n    modifier onlyRivendell {\\r\\n        require(\\r\\n            msg.sender == rivendell,\\r\\n            \\\"Only rivendell can call this function.\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //Functions\\r\\n    /**\\r\\n     * @dev Constructor for setting initial variables\\r\\n     * @param _tellor the address of the tellor contract\\r\\n     * @param _initialWalkers an array of three addresses to serve as the initial walkers\\r\\n     */\\r\\n    constructor(address _tellor, address[3] memory _initialWalkers) {\\r\\n        tellor = _tellor;\\r\\n        _newWalker(_initialWalkers[0], \\\"Aragorn\\\");\\r\\n        _newWalker(_initialWalkers[1], \\\"Legolas\\\");\\r\\n        _newWalker(_initialWalkers[2], \\\"Gimli\\\");\\r\\n        stakeAmount = 10 ether;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to banish a walker\\r\\n     * @param _oldWalker address of walker to be banished (removed from Fellowship)\\r\\n     **/\\r\\n    function banishWalker(address _oldWalker) external onlyRivendell {\\r\\n        _banishWalker(_oldWalker);\\r\\n        emit WalkerBanished(_oldWalker);\\r\\n    }\\r\\n\\r\\n    function depositPayment(uint256 _amount) external {\\r\\n        payReward();\\r\\n\\r\\n        ERC20Interface(tellor).transferFrom(msg.sender, address(this), _amount);\\r\\n        payments[msg.sender] += _amount;\\r\\n        rewardPool += _amount;\\r\\n        emit PaymentDeposited(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    function depositStake(uint256 _amount) external {\\r\\n        ERC20Interface(tellor).transferFrom(msg.sender, address(this), _amount);\\r\\n        walkers[msg.sender].balance += _amount;\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.INACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.PENDING_WITHDRAW,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        if (walkers[msg.sender].balance >= stakeAmount) {\\r\\n            walkers[msg.sender].status = Status.ACTIVE;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function newRivendell(address _newRivendell) external {\\r\\n        require(\\r\\n            msg.sender == rivendell || rivendell == address(0),\\r\\n            \\\"Only rivendell can call this function.\\\"\\r\\n        );\\r\\n        rivendell = _newRivendell;\\r\\n    }\\r\\n\\r\\n    function newWalker(address _walker, string memory _name)\\r\\n        external\\r\\n        onlyRivendell\\r\\n    {\\r\\n        require(walkers[_walker].date == 0, \\\"cannot already be a walker\\\");\\r\\n        _newWalker(_walker, _name);\\r\\n    }\\r\\n\\r\\n    function payReward() public {\\r\\n        lastPayDate = block.timestamp;\\r\\n\\r\\n        if (rewardPool > 0) {\\r\\n            uint256 timeSinceLastPayment = block.timestamp - lastPayDate;\\r\\n            if (timeSinceLastPayment > 6 * 30 days) {\\r\\n                timeSinceLastPayment = 6 * 30 days;\\r\\n            }\\r\\n            uint256 reward =\\r\\n                (rewardPool * timeSinceLastPayment) /\\r\\n                    6 /\\r\\n                    30 days /\\r\\n                    fellowship.length;\\r\\n            for (uint256 i = 0; i < fellowship.length; i++) {\\r\\n                if (walkers[fellowship[i]].status == Status.ACTIVE) {\\r\\n                    walkers[fellowship[i]].rewardBalance += reward;\\r\\n                    rewardPool -= reward;\\r\\n                }\\r\\n            }\\r\\n            emit RewardsPaid(reward);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //to pay out the reward\\r\\n    function recieveReward() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status == Status.ACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            msg.sender,\\r\\n            walkers[msg.sender].rewardBalance\\r\\n        );\\r\\n        walkers[msg.sender].rewardBalance = 0;\\r\\n    }\\r\\n\\r\\n    function requestStakingWithdraw() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.INACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        walkers[msg.sender].status = Status.PENDING_WITHDRAW;\\r\\n        walkers[msg.sender].date = block.timestamp;\\r\\n        emit StakeWithdrawalRequestStarted(msg.sender);\\r\\n    }\\r\\n\\r\\n    function setStakeAmount(uint256 _amount) external onlyRivendell {\\r\\n        stakeAmount = _amount;\\r\\n        for (uint256 i = 0; i < fellowship.length; i++) {\\r\\n            if (walkers[fellowship[i]].balance < stakeAmount) {\\r\\n                walkers[fellowship[i]].status = Status.UNFUNDED;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //a function to store input about keys on other chains or other necessary details;\\r\\n    function setWalkerInformation(bytes32 _input, bytes memory _output)\\r\\n        external\\r\\n    {\\r\\n        information[msg.sender][_input] = _output;\\r\\n        emit NewWalkerInformation(msg.sender, _input, _output);\\r\\n    }\\r\\n\\r\\n    function slashWalker(\\r\\n        address _walker,\\r\\n        uint256 _amount,\\r\\n        bool _banish\\r\\n    ) external onlyRivendell {\\r\\n        walkers[_walker].balance -= _amount;\\r\\n        rewardPool += _amount;\\r\\n        if (_banish) {\\r\\n            _banishWalker(_walker);\\r\\n        } else if (walkers[_walker].balance < stakeAmount) {\\r\\n            walkers[_walker].status = Status.UNFUNDED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function withdrawStake() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status == Status.PENDING_WITHDRAW,\\r\\n            \\\"walker has wrong status\\\"\\r\\n        );\\r\\n        require(\\r\\n            block.timestamp - walkers[msg.sender].date > 14 days,\\r\\n            \\\"has not been long enough to withdraw\\\"\\r\\n        );\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            msg.sender,\\r\\n            walkers[msg.sender].balance\\r\\n        );\\r\\n        walkers[msg.sender].balance = 0;\\r\\n        _banishWalker(msg.sender);\\r\\n        emit StakeWithdrawn(msg.sender);\\r\\n    }\\r\\n\\r\\n    //view functions\\r\\n\\r\\n    function checkReward() external view returns (uint256) {\\r\\n        uint256 timeSinceLastPayment = block.timestamp - lastPayDate;\\r\\n        if (timeSinceLastPayment > 6 * 30 days) {\\r\\n            timeSinceLastPayment = 6 * 30 days;\\r\\n        }\\r\\n        return ((rewardPool * timeSinceLastPayment) /\\r\\n            6 /\\r\\n            30 days /\\r\\n            fellowship.length);\\r\\n    }\\r\\n\\r\\n    function getFellowshipSize() external view returns (uint256) {\\r\\n        return fellowship.length;\\r\\n    }\\r\\n\\r\\n    function getWalkerDetails(address _walker)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            Status,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            string memory\\r\\n        )\\r\\n    {\\r\\n        return (\\r\\n            walkers[_walker].date,\\r\\n            walkers[_walker].fellowshipIndex,\\r\\n            walkers[_walker].status,\\r\\n            walkers[_walker].balance,\\r\\n            walkers[_walker].rewardBalance,\\r\\n            walkers[_walker].name\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getWalkerInformation(address _walker, bytes32 _input)\\r\\n        external\\r\\n        view\\r\\n        returns (bytes memory _output)\\r\\n    {\\r\\n        return information[_walker][_input];\\r\\n    }\\r\\n\\r\\n    //checks whether they are a Walker\\r\\n    function isWalker(address _a) external view returns (bool _i) {\\r\\n        if (walkers[_a].status == Status.ACTIVE) {\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _banishWalker(address _oldWalker) internal {\\r\\n        fellowship[walkers[_oldWalker].fellowshipIndex] = fellowship[\\r\\n            fellowship.length - 1\\r\\n        ];\\r\\n        walkers[fellowship[fellowship.length - 1]].fellowshipIndex = walkers[\\r\\n            _oldWalker\\r\\n        ]\\r\\n            .fellowshipIndex;\\r\\n        fellowship.pop();\\r\\n        walkers[_oldWalker].fellowshipIndex = 0;\\r\\n        walkers[_oldWalker].status = Status.INACTIVE;\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            _oldWalker,\\r\\n            walkers[_oldWalker].balance\\r\\n        );\\r\\n        walkers[_oldWalker].balance = 0;\\r\\n        rewardPool += walkers[_oldWalker].rewardBalance;\\r\\n        walkers[_oldWalker].rewardBalance = 0;\\r\\n    }\\r\\n\\r\\n    function _newWalker(address _walker, string memory _name) internal {\\r\\n        fellowship.push(_walker);\\r\\n        walkers[_walker] = Walker({\\r\\n            date: block.timestamp,\\r\\n            name: _name,\\r\\n            status: Status.UNFUNDED,\\r\\n            fellowshipIndex: fellowship.length - 1,\\r\\n            balance: 0,\\r\\n            rewardBalance: 0\\r\\n        });\\r\\n        emit NewWalker(_walker);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x69d0b386a60005b84b85f123340adcf707938ff839bad5e5dc677cbfa78e3270\",\"license\":\"MIT\"},\"contracts/interfaces/ERC20Interface.sol\":{\"content\":\"\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface ERC20Interface{\\r\\n    function transfer(address _to, uint _amount) external returns(bool);\\r\\n    function transferFrom(address _from,address _to, uint _amount) external returns(bool);\\r\\n    function balanceOf(address _addy) external returns(uint256);\\r\\n    function balanceOfAt(address _addy, uint _block) external returns(uint256);\\r\\n}\",\"keccak256\":\"0x0ceca4a2126bbf0d641fcfc77ad1d6472f413a616a8b0a4b79046ded5320d6e7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003f5438038062003f54833981810160405281019062000037919062000579565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000fe81600060038110620000b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600781526020017f417261676f726e000000000000000000000000000000000000000000000000008152506200022160201b60201c565b62000184816001600381106200013d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600781526020017f4c65676f6c6173000000000000000000000000000000000000000000000000008152506200022160201b60201c565b6200020a81600260038110620001c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600581526020017f47696d6c690000000000000000000000000000000000000000000000000000008152506200022160201b60201c565b678ac7230489e800006002819055505050620007d7565b6008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c00160405280600380811115620002c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020014281526020016001600880549050620002e891906200063a565b8152602001600081526020016000815260200182815250600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600381111562000390577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005019080519060200190620003db9291906200041c565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c77727782604051620004109190620005cb565b60405180910390a15050565b8280546200042a90620006b3565b90600052602060002090601f0160209004810192826200044e57600085556200049a565b82601f106200046957805160ff19168380011785556200049a565b828001600101855582156200049a579182015b82811115620004995782518255916020019190600101906200047c565b5b509050620004a99190620004ad565b5090565b5b80821115620004c8576000816000905550600101620004ae565b5090565b6000620004e3620004dd8462000611565b620005e8565b90508082856020860282011115620004fa57600080fd5b60005b858110156200052e578162000513888262000538565b845260208401935060208301925050600181019050620004fd565b5050509392505050565b6000815190506200054981620007bd565b92915050565b600082601f8301126200056157600080fd5b600362000570848285620004cc565b91505092915050565b600080608083850312156200058d57600080fd5b60006200059d8582860162000538565b9250506020620005b0858286016200054f565b9150509250929050565b620005c58162000675565b82525050565b6000602082019050620005e26000830184620005ba565b92915050565b6000620005f462000607565b9050620006028282620006e9565b919050565b6000604051905090565b600067ffffffffffffffff8211156200062f576200062e6200077d565b5b602082029050919050565b60006200064782620006a9565b91506200065483620006a9565b9250828210156200066a57620006696200071f565b5b828203905092915050565b6000620006828262000689565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620006cc57607f821691505b60208210811415620006e357620006e26200074e565b5b50919050565b620006f482620007ac565b810181811067ffffffffffffffff821117156200071657620007156200077d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620007c88162000675565b8114620007d457600080fd5b50565b61376d80620007e76000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636b749c47116100de578063bed9d86111610097578063cb82cc8f11610071578063cb82cc8f14610408578063e2982c2114610424578063e2a9cb6014610454578063f807c4681461047257610173565b8063bed9d861146103c4578063c4b24a46146103ce578063c7e061bb146103ec57610173565b80636b749c47146102ff5780636c7575ae1461031b578063751d0334146103395780637842a3a41461036957806379a4ab5114610373578063abf4f44a1461038f57610173565b80633bc3f5de116101305780633bc3f5de1461023d5780633d9a7fdb1461025b57806343808c50146102775780634df260d71461029357806360c7dc47146102c357806366666aa9146102e157610173565b806311bd8100146101785780631959ad5b146101945780631bb6e2cd146101b25780631cc29e19146101e2578063217db0a4146101fe57806328449c3a14610233575b600080fd5b610192600480360381019061018d9190612c43565b61047c565b005b61019c61059f565b6040516101a99190612ef8565b60405180910390f35b6101cc60048036038101906101c79190612d63565b6105c5565b6040516101d99190612ef8565b60405180910390f35b6101fc60048036038101906101f79190612bde565b610604565b005b61021860048036038101906102139190612bde565b610731565b60405161022a96959493929190612fee565b60405180910390f35b61023b610802565b005b610245610a16565b60405161025291906130f6565b60405180910390f35b61027560048036038101906102709190612bde565b610a1c565b005b610291600480360381019061028c9190612d63565b610aef565b005b6102ad60048036038101906102a89190612bde565b610d53565b6040516102ba9190612fb1565b60405180910390f35b6102cb610e2f565b6040516102d891906130f6565b60405180910390f35b6102e9610e35565b6040516102f691906130f6565b60405180910390f35b61031960048036038101906103149190612d63565b610e3b565b005b610323610fa0565b60405161033091906130f6565b60405180910390f35b610353600480360381019061034e9190612c07565b610fad565b6040516103609190612fcc565b60405180910390f35b610371611090565b005b61038d60048036038101906103889190612d0f565b611364565b005b6103a960048036038101906103a49190612bde565b611408565b6040516103bb96959493929190613111565b60405180910390f35b6103cc611651565b005b6103d6611961565b6040516103e391906130f6565b60405180910390f35b61040660048036038101906104019190612c97565b6119c4565b005b610422600480360381019061041d9190612d63565b611bbe565b005b61043e60048036038101906104399190612bde565b611faf565b60405161044b91906130f6565b60405180910390f35b61045c611fc7565b6040516104699190612ef8565b60405180910390f35b61047a611fed565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390613076565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890613096565b60405180910390fd5b61059b828261222b565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881815481106105d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106ae5750600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490613076565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60066020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301549080600401549080600501805461077f90613406565b80601f01602080910402602001604051908101604052809291908181526020018280546107ab90613406565b80156107f85780601f106107cd576101008083540402835291602001916107f8565b820191906000526020600020905b8154815290600101906020018083116107db57829003601f168201915b5050505050905086565b6001600381111561083c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156108c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906130d6565b60405180910390fd5b6002600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610991577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fb2e7a03df6688eb07f16c7d4b5416e395e6cd65e5deea1dbbaefd239ace537d033604051610a0c9190612ef8565b60405180910390a1565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa390613076565b60405180910390fd5b610ab58161241e565b7fac76dcc3aa3f5c914cd11efd9783db7b9f5522ad811eca79bbe2d719bb74788a81604051610ae49190612ef8565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690613076565b60405180910390fd5b8060028190555060005b600880549050811015610d4f576002546006600060088481548110610bd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015610d3c5760036006600060088481548110610c86577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b8080610d4790613469565b915050610b89565b5050565b6000806003811115610d8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610e255760019050610e2a565b600090505b919050565b60025481565b60015481565b610e43611090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610ea293929190612f13565b602060405180830381600087803b158015610ebc57600080fd5b505af1158015610ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef49190612ce6565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f449190613238565b925050819055508060016000828254610f5d9190613238565b925050819055507fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd453382604051610f95929190612f88565b60405180910390a150565b6000600880549050905090565b6060600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805461100a90613406565b80601f016020809104026020016040519081016040528092919081815260200182805461103690613406565b80156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050905092915050565b42600081905550600060015411156113625760008054426110b19190613319565b905062ed4e008111156110c55762ed4e0090505b600060088054905062278d006006846001546110e191906132bf565b6110eb919061328e565b6110f5919061328e565b6110ff919061328e565b905060005b600880549050811015611327576000600381111561114b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006600060088481548110611189577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611237577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156113145781600660006008848154811061127c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546112f39190613238565b92505081905550816001600082825461130c9190613319565b925050819055505b808061131f90613469565b915050611104565b507fb0c65a5b323022d926c456e1564d86f0bda40160a781c820f571d7635b3488018160405161135791906130f6565b60405180910390a150505b565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090805190602001906113c892919061297c565b507f3c4a87d301ea6075e9b1efeee0b9d746feffe2294183c22a12e845df3e3a8edf3383836040516113fc93929190612f4a565b60405180910390a15050565b60008060008060006060600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600660008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018080546115bc90613406565b80601f01602080910402602001604051908101604052809291908181526020018280546115e890613406565b80156116355780601f1061160a57610100808354040283529160200191611635565b820191906000526020600020905b81548152906001019060200180831161161857829003601f168201915b5050505050905095509550955095509550955091939550919395565b6002600381111561168b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611713577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174a90613056565b60405180910390fd5b62127500600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117a59190613319565b116117e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dc906130b6565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b8152600401611884929190612f88565b602060405180830381600087803b15801561189e57600080fd5b505af11580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d69190612ce6565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506119283361241e565b7f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec336040516119579190612ef8565b60405180910390a1565b600080600054426119729190613319565b905062ed4e008111156119865762ed4e0090505b60088054905062278d006006836001546119a091906132bf565b6119aa919061328e565b6119b4919061328e565b6119be919061328e565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4b90613076565b60405180910390fd5b81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611aa69190613319565b925050819055508160016000828254611abf9190613238565b925050819055508015611ada57611ad58361241e565b611bb9565b600254600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015611bb8576003600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611bb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611c1d93929190612f13565b602060405180830381600087803b158015611c3757600080fd5b505af1158015611c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6f9190612ce6565b5080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611cc29190613238565b9250508190555060016003811115611d03577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611d8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611dcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc3906130d6565b60405180910390fd5b60026003811115611e06577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611e8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec6906130d6565b60405180910390fd5b600254600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015410611fac576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611fa6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b60076020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003811115612027577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156120af577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146120ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e6906130d6565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040518363ffffffff1660e01b815260040161218e929190612f88565b602060405180830381600087803b1580156121a857600080fd5b505af11580156121bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e09190612ce6565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550565b6008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c001604052806003808111156122d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200142815260200160016008805490506122ef9190613319565b8152602001600081526020016000815260200182815250600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836003811115612396577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050190805190602001906123df929190612a02565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277826040516124129190612ef8565b60405180910390a15050565b600860016008805490506124329190613319565b81548110612469577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015481548110612510577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460066000600860016008805490506125b39190613319565b815481106125ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600880548061268e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115612797577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b815260040161283b929190612f88565b602060405180830381600087803b15801561285557600080fd5b505af1158015612869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288d9190612ce6565b506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546001600082825461292a9190613238565b925050819055506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555050565b82805461298890613406565b90600052602060002090601f0160209004810192826129aa57600085556129f1565b82601f106129c357805160ff19168380011785556129f1565b828001600101855582156129f1579182015b828111156129f05782518255916020019190600101906129d5565b5b5090506129fe9190612a88565b5090565b828054612a0e90613406565b90600052602060002090601f016020900481019282612a305760008555612a77565b82601f10612a4957805160ff1916838001178555612a77565b82800160010185558215612a77579182015b82811115612a76578251825591602001919060010190612a5b565b5b509050612a849190612a88565b5090565b5b80821115612aa1576000816000905550600101612a89565b5090565b6000612ab8612ab38461319e565b613179565b905082815260208101848484011115612ad057600080fd5b612adb8482856133c4565b509392505050565b6000612af6612af1846131cf565b613179565b905082815260208101848484011115612b0e57600080fd5b612b198482856133c4565b509392505050565b600081359050612b30816136db565b92915050565b600081359050612b45816136f2565b92915050565b600081519050612b5a816136f2565b92915050565b600081359050612b6f81613709565b92915050565b600082601f830112612b8657600080fd5b8135612b96848260208601612aa5565b91505092915050565b600082601f830112612bb057600080fd5b8135612bc0848260208601612ae3565b91505092915050565b600081359050612bd881613720565b92915050565b600060208284031215612bf057600080fd5b6000612bfe84828501612b21565b91505092915050565b60008060408385031215612c1a57600080fd5b6000612c2885828601612b21565b9250506020612c3985828601612b60565b9150509250929050565b60008060408385031215612c5657600080fd5b6000612c6485828601612b21565b925050602083013567ffffffffffffffff811115612c8157600080fd5b612c8d85828601612b9f565b9150509250929050565b600080600060608486031215612cac57600080fd5b6000612cba86828701612b21565b9350506020612ccb86828701612bc9565b9250506040612cdc86828701612b36565b9150509250925092565b600060208284031215612cf857600080fd5b6000612d0684828501612b4b565b91505092915050565b60008060408385031215612d2257600080fd5b6000612d3085828601612b60565b925050602083013567ffffffffffffffff811115612d4d57600080fd5b612d5985828601612b75565b9150509250929050565b600060208284031215612d7557600080fd5b6000612d8384828501612bc9565b91505092915050565b612d958161334d565b82525050565b612da48161335f565b82525050565b612db38161336b565b82525050565b6000612dc482613200565b612dce8185613216565b9350612dde8185602086016133d3565b612de78161359d565b840191505092915050565b612dfb816133b2565b82525050565b6000612e0c8261320b565b612e168185613227565b9350612e268185602086016133d3565b612e2f8161359d565b840191505092915050565b6000612e47601783613227565b9150612e52826135ae565b602082019050919050565b6000612e6a602683613227565b9150612e75826135d7565b604082019050919050565b6000612e8d601a83613227565b9150612e9882613626565b602082019050919050565b6000612eb0602483613227565b9150612ebb8261364f565b604082019050919050565b6000612ed3601783613227565b9150612ede8261369e565b602082019050919050565b612ef2816133a8565b82525050565b6000602082019050612f0d6000830184612d8c565b92915050565b6000606082019050612f286000830186612d8c565b612f356020830185612d8c565b612f426040830184612ee9565b949350505050565b6000606082019050612f5f6000830186612d8c565b612f6c6020830185612daa565b8181036040830152612f7e8184612db9565b9050949350505050565b6000604082019050612f9d6000830185612d8c565b612faa6020830184612ee9565b9392505050565b6000602082019050612fc66000830184612d9b565b92915050565b60006020820190508181036000830152612fe68184612db9565b905092915050565b600060c0820190506130036000830189612df2565b6130106020830188612ee9565b61301d6040830187612ee9565b61302a6060830186612ee9565b6130376080830185612ee9565b81810360a08301526130498184612e01565b9050979650505050505050565b6000602082019050818103600083015261306f81612e3a565b9050919050565b6000602082019050818103600083015261308f81612e5d565b9050919050565b600060208201905081810360008301526130af81612e80565b9050919050565b600060208201905081810360008301526130cf81612ea3565b9050919050565b600060208201905081810360008301526130ef81612ec6565b9050919050565b600060208201905061310b6000830184612ee9565b92915050565b600060c0820190506131266000830189612ee9565b6131336020830188612ee9565b6131406040830187612df2565b61314d6060830186612ee9565b61315a6080830185612ee9565b81810360a083015261316c8184612e01565b9050979650505050505050565b6000613183613194565b905061318f8282613438565b919050565b6000604051905090565b600067ffffffffffffffff8211156131b9576131b861356e565b5b6131c28261359d565b9050602081019050919050565b600067ffffffffffffffff8211156131ea576131e961356e565b5b6131f38261359d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613243826133a8565b915061324e836133a8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613283576132826134b2565b5b828201905092915050565b6000613299826133a8565b91506132a4836133a8565b9250826132b4576132b36134e1565b5b828204905092915050565b60006132ca826133a8565b91506132d5836133a8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561330e5761330d6134b2565b5b828202905092915050565b6000613324826133a8565b915061332f836133a8565b925082821015613342576133416134b2565b5b828203905092915050565b600061335882613388565b9050919050565b60008115159050919050565b6000819050919050565b6000819050613383826136c7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006133bd82613375565b9050919050565b82818337600083830152505050565b60005b838110156133f15780820151818401526020810190506133d6565b83811115613400576000848401525b50505050565b6000600282049050600182168061341e57607f821691505b602082108114156134325761343161353f565b5b50919050565b6134418261359d565b810181811067ffffffffffffffff821117156134605761345f61356e565b5b80604052505050565b6000613474826133a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134a7576134a66134b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f77616c6b6572206861732077726f6e6720737461747573000000000000000000600082015250565b7f4f6e6c7920726976656e64616c652063616e2063616c6c20746869732066756e60008201527f6374696f6e2e0000000000000000000000000000000000000000000000000000602082015250565b7f63616e6e6f7420616c726561647920626520612077616c6b6572000000000000600082015250565b7f686173206e6f74206265656e206c6f6e6720656e6f75676820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f57616c6b6572206861732077726f6e6720737461747573000000000000000000600082015250565b600481106136d8576136d7613510565b5b50565b6136e48161334d565b81146136ef57600080fd5b50565b6136fb8161335f565b811461370657600080fd5b50565b6137128161336b565b811461371d57600080fd5b50565b613729816133a8565b811461373457600080fd5b5056fea26469706673582212202f76d7f768f36a2579cb08dd2b713da13978a8356f887e84c0f40d6792246f9b64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80636b749c47116100de578063bed9d86111610097578063cb82cc8f11610071578063cb82cc8f14610408578063e2982c2114610424578063e2a9cb6014610454578063f807c4681461047257610173565b8063bed9d861146103c4578063c4b24a46146103ce578063c7e061bb146103ec57610173565b80636b749c47146102ff5780636c7575ae1461031b578063751d0334146103395780637842a3a41461036957806379a4ab5114610373578063abf4f44a1461038f57610173565b80633bc3f5de116101305780633bc3f5de1461023d5780633d9a7fdb1461025b57806343808c50146102775780634df260d71461029357806360c7dc47146102c357806366666aa9146102e157610173565b806311bd8100146101785780631959ad5b146101945780631bb6e2cd146101b25780631cc29e19146101e2578063217db0a4146101fe57806328449c3a14610233575b600080fd5b610192600480360381019061018d9190612c43565b61047c565b005b61019c61059f565b6040516101a99190612ef8565b60405180910390f35b6101cc60048036038101906101c79190612d63565b6105c5565b6040516101d99190612ef8565b60405180910390f35b6101fc60048036038101906101f79190612bde565b610604565b005b61021860048036038101906102139190612bde565b610731565b60405161022a96959493929190612fee565b60405180910390f35b61023b610802565b005b610245610a16565b60405161025291906130f6565b60405180910390f35b61027560048036038101906102709190612bde565b610a1c565b005b610291600480360381019061028c9190612d63565b610aef565b005b6102ad60048036038101906102a89190612bde565b610d53565b6040516102ba9190612fb1565b60405180910390f35b6102cb610e2f565b6040516102d891906130f6565b60405180910390f35b6102e9610e35565b6040516102f691906130f6565b60405180910390f35b61031960048036038101906103149190612d63565b610e3b565b005b610323610fa0565b60405161033091906130f6565b60405180910390f35b610353600480360381019061034e9190612c07565b610fad565b6040516103609190612fcc565b60405180910390f35b610371611090565b005b61038d60048036038101906103889190612d0f565b611364565b005b6103a960048036038101906103a49190612bde565b611408565b6040516103bb96959493929190613111565b60405180910390f35b6103cc611651565b005b6103d6611961565b6040516103e391906130f6565b60405180910390f35b61040660048036038101906104019190612c97565b6119c4565b005b610422600480360381019061041d9190612d63565b611bbe565b005b61043e60048036038101906104399190612bde565b611faf565b60405161044b91906130f6565b60405180910390f35b61045c611fc7565b6040516104699190612ef8565b60405180910390f35b61047a611fed565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390613076565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890613096565b60405180910390fd5b61059b828261222b565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881815481106105d557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106ae5750600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490613076565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60066020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301549080600401549080600501805461077f90613406565b80601f01602080910402602001604051908101604052809291908181526020018280546107ab90613406565b80156107f85780601f106107cd576101008083540402835291602001916107f8565b820191906000526020600020905b8154815290600101906020018083116107db57829003601f168201915b5050505050905086565b6001600381111561083c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156108c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906130d6565b60405180910390fd5b6002600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610991577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fb2e7a03df6688eb07f16c7d4b5416e395e6cd65e5deea1dbbaefd239ace537d033604051610a0c9190612ef8565b60405180910390a1565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa390613076565b60405180910390fd5b610ab58161241e565b7fac76dcc3aa3f5c914cd11efd9783db7b9f5522ad811eca79bbe2d719bb74788a81604051610ae49190612ef8565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690613076565b60405180910390fd5b8060028190555060005b600880549050811015610d4f576002546006600060088481548110610bd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015610d3c5760036006600060088481548110610c86577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b8080610d4790613469565b915050610b89565b5050565b6000806003811115610d8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610e255760019050610e2a565b600090505b919050565b60025481565b60015481565b610e43611090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610ea293929190612f13565b602060405180830381600087803b158015610ebc57600080fd5b505af1158015610ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef49190612ce6565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f449190613238565b925050819055508060016000828254610f5d9190613238565b925050819055507fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd453382604051610f95929190612f88565b60405180910390a150565b6000600880549050905090565b6060600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805461100a90613406565b80601f016020809104026020016040519081016040528092919081815260200182805461103690613406565b80156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050905092915050565b42600081905550600060015411156113625760008054426110b19190613319565b905062ed4e008111156110c55762ed4e0090505b600060088054905062278d006006846001546110e191906132bf565b6110eb919061328e565b6110f5919061328e565b6110ff919061328e565b905060005b600880549050811015611327576000600381111561114b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006600060088481548110611189577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611237577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156113145781600660006008848154811061127c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546112f39190613238565b92505081905550816001600082825461130c9190613319565b925050819055505b808061131f90613469565b915050611104565b507fb0c65a5b323022d926c456e1564d86f0bda40160a781c820f571d7635b3488018160405161135791906130f6565b60405180910390a150505b565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090805190602001906113c892919061297c565b507f3c4a87d301ea6075e9b1efeee0b9d746feffe2294183c22a12e845df3e3a8edf3383836040516113fc93929190612f4a565b60405180910390a15050565b60008060008060006060600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600660008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018080546115bc90613406565b80601f01602080910402602001604051908101604052809291908181526020018280546115e890613406565b80156116355780601f1061160a57610100808354040283529160200191611635565b820191906000526020600020905b81548152906001019060200180831161161857829003601f168201915b5050505050905095509550955095509550955091939550919395565b6002600381111561168b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611713577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174a90613056565b60405180910390fd5b62127500600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117a59190613319565b116117e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dc906130b6565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b8152600401611884929190612f88565b602060405180830381600087803b15801561189e57600080fd5b505af11580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d69190612ce6565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506119283361241e565b7f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec336040516119579190612ef8565b60405180910390a1565b600080600054426119729190613319565b905062ed4e008111156119865762ed4e0090505b60088054905062278d006006836001546119a091906132bf565b6119aa919061328e565b6119b4919061328e565b6119be919061328e565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4b90613076565b60405180910390fd5b81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611aa69190613319565b925050819055508160016000828254611abf9190613238565b925050819055508015611ada57611ad58361241e565b611bb9565b600254600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015611bb8576003600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611bb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611c1d93929190612f13565b602060405180830381600087803b158015611c3757600080fd5b505af1158015611c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6f9190612ce6565b5080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611cc29190613238565b9250508190555060016003811115611d03577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611d8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611dcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc3906130d6565b60405180910390fd5b60026003811115611e06577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611e8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec6906130d6565b60405180910390fd5b600254600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015410611fac576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611fa6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b60076020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003811115612027577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156120af577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146120ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e6906130d6565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040518363ffffffff1660e01b815260040161218e929190612f88565b602060405180830381600087803b1580156121a857600080fd5b505af11580156121bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e09190612ce6565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550565b6008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c001604052806003808111156122d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200142815260200160016008805490506122ef9190613319565b8152602001600081526020016000815260200182815250600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836003811115612396577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050190805190602001906123df929190612a02565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277826040516124129190612ef8565b60405180910390a15050565b600860016008805490506124329190613319565b81548110612469577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015481548110612510577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460066000600860016008805490506125b39190613319565b815481106125ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600880548061268e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115612797577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b815260040161283b929190612f88565b602060405180830381600087803b15801561285557600080fd5b505af1158015612869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288d9190612ce6565b506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546001600082825461292a9190613238565b925050819055506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555050565b82805461298890613406565b90600052602060002090601f0160209004810192826129aa57600085556129f1565b82601f106129c357805160ff19168380011785556129f1565b828001600101855582156129f1579182015b828111156129f05782518255916020019190600101906129d5565b5b5090506129fe9190612a88565b5090565b828054612a0e90613406565b90600052602060002090601f016020900481019282612a305760008555612a77565b82601f10612a4957805160ff1916838001178555612a77565b82800160010185558215612a77579182015b82811115612a76578251825591602001919060010190612a5b565b5b509050612a849190612a88565b5090565b5b80821115612aa1576000816000905550600101612a89565b5090565b6000612ab8612ab38461319e565b613179565b905082815260208101848484011115612ad057600080fd5b612adb8482856133c4565b509392505050565b6000612af6612af1846131cf565b613179565b905082815260208101848484011115612b0e57600080fd5b612b198482856133c4565b509392505050565b600081359050612b30816136db565b92915050565b600081359050612b45816136f2565b92915050565b600081519050612b5a816136f2565b92915050565b600081359050612b6f81613709565b92915050565b600082601f830112612b8657600080fd5b8135612b96848260208601612aa5565b91505092915050565b600082601f830112612bb057600080fd5b8135612bc0848260208601612ae3565b91505092915050565b600081359050612bd881613720565b92915050565b600060208284031215612bf057600080fd5b6000612bfe84828501612b21565b91505092915050565b60008060408385031215612c1a57600080fd5b6000612c2885828601612b21565b9250506020612c3985828601612b60565b9150509250929050565b60008060408385031215612c5657600080fd5b6000612c6485828601612b21565b925050602083013567ffffffffffffffff811115612c8157600080fd5b612c8d85828601612b9f565b9150509250929050565b600080600060608486031215612cac57600080fd5b6000612cba86828701612b21565b9350506020612ccb86828701612bc9565b9250506040612cdc86828701612b36565b9150509250925092565b600060208284031215612cf857600080fd5b6000612d0684828501612b4b565b91505092915050565b60008060408385031215612d2257600080fd5b6000612d3085828601612b60565b925050602083013567ffffffffffffffff811115612d4d57600080fd5b612d5985828601612b75565b9150509250929050565b600060208284031215612d7557600080fd5b6000612d8384828501612bc9565b91505092915050565b612d958161334d565b82525050565b612da48161335f565b82525050565b612db38161336b565b82525050565b6000612dc482613200565b612dce8185613216565b9350612dde8185602086016133d3565b612de78161359d565b840191505092915050565b612dfb816133b2565b82525050565b6000612e0c8261320b565b612e168185613227565b9350612e268185602086016133d3565b612e2f8161359d565b840191505092915050565b6000612e47601783613227565b9150612e52826135ae565b602082019050919050565b6000612e6a602683613227565b9150612e75826135d7565b604082019050919050565b6000612e8d601a83613227565b9150612e9882613626565b602082019050919050565b6000612eb0602483613227565b9150612ebb8261364f565b604082019050919050565b6000612ed3601783613227565b9150612ede8261369e565b602082019050919050565b612ef2816133a8565b82525050565b6000602082019050612f0d6000830184612d8c565b92915050565b6000606082019050612f286000830186612d8c565b612f356020830185612d8c565b612f426040830184612ee9565b949350505050565b6000606082019050612f5f6000830186612d8c565b612f6c6020830185612daa565b8181036040830152612f7e8184612db9565b9050949350505050565b6000604082019050612f9d6000830185612d8c565b612faa6020830184612ee9565b9392505050565b6000602082019050612fc66000830184612d9b565b92915050565b60006020820190508181036000830152612fe68184612db9565b905092915050565b600060c0820190506130036000830189612df2565b6130106020830188612ee9565b61301d6040830187612ee9565b61302a6060830186612ee9565b6130376080830185612ee9565b81810360a08301526130498184612e01565b9050979650505050505050565b6000602082019050818103600083015261306f81612e3a565b9050919050565b6000602082019050818103600083015261308f81612e5d565b9050919050565b600060208201905081810360008301526130af81612e80565b9050919050565b600060208201905081810360008301526130cf81612ea3565b9050919050565b600060208201905081810360008301526130ef81612ec6565b9050919050565b600060208201905061310b6000830184612ee9565b92915050565b600060c0820190506131266000830189612ee9565b6131336020830188612ee9565b6131406040830187612df2565b61314d6060830186612ee9565b61315a6080830185612ee9565b81810360a083015261316c8184612e01565b9050979650505050505050565b6000613183613194565b905061318f8282613438565b919050565b6000604051905090565b600067ffffffffffffffff8211156131b9576131b861356e565b5b6131c28261359d565b9050602081019050919050565b600067ffffffffffffffff8211156131ea576131e961356e565b5b6131f38261359d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613243826133a8565b915061324e836133a8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613283576132826134b2565b5b828201905092915050565b6000613299826133a8565b91506132a4836133a8565b9250826132b4576132b36134e1565b5b828204905092915050565b60006132ca826133a8565b91506132d5836133a8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561330e5761330d6134b2565b5b828202905092915050565b6000613324826133a8565b915061332f836133a8565b925082821015613342576133416134b2565b5b828203905092915050565b600061335882613388565b9050919050565b60008115159050919050565b6000819050919050565b6000819050613383826136c7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006133bd82613375565b9050919050565b82818337600083830152505050565b60005b838110156133f15780820151818401526020810190506133d6565b83811115613400576000848401525b50505050565b6000600282049050600182168061341e57607f821691505b602082108114156134325761343161353f565b5b50919050565b6134418261359d565b810181811067ffffffffffffffff821117156134605761345f61356e565b5b80604052505050565b6000613474826133a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134a7576134a66134b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f77616c6b6572206861732077726f6e6720737461747573000000000000000000600082015250565b7f4f6e6c7920726976656e64616c652063616e2063616c6c20746869732066756e60008201527f6374696f6e2e0000000000000000000000000000000000000000000000000000602082015250565b7f63616e6e6f7420616c726561647920626520612077616c6b6572000000000000600082015250565b7f686173206e6f74206265656e206c6f6e6720656e6f75676820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f57616c6b6572206861732077726f6e6720737461747573000000000000000000600082015250565b600481106136d8576136d7613510565b5b50565b6136e48161334d565b81146136ef57600080fd5b50565b6136fb8161335f565b811461370657600080fd5b50565b6137128161336b565b811461371d57600080fd5b50565b613729816133a8565b811461373457600080fd5b5056fea26469706673582212202f76d7f768f36a2579cb08dd2b713da13978a8356f887e84c0f40d6792246f9b64736f6c63430008020033",
  "devdoc": {
    "author": "Tellor Inc.",
    "details": "This contract holds the selected few chosen as part of the Fellowship*",
    "kind": "dev",
    "methods": {
      "banishWalker(address)": {
        "details": "Function to banish a walker",
        "params": {
          "_oldWalker": "address of walker to be banished (removed from Fellowship)*"
        }
      },
      "constructor": {
        "details": "Constructor for setting initial variables",
        "params": {
          "_initialWalkers": "an array of three addresses to serve as the initial walkers",
          "_tellor": "the address of the tellor contract"
        }
      }
    },
    "title": "Fellowship",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "lastPayDate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 26,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "rewardPool",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 28,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "stakeAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "rivendell",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 32,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "tellor",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 38,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "information",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))"
      },
      {
        "astId": 43,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "walkers",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(Walker)22_storage)"
      },
      {
        "astId": 47,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "payments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 50,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "fellowship",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Status)8": {
        "encoding": "inplace",
        "label": "enum Fellowship.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes_storage)"
      },
      "t_mapping(t_address,t_struct(Walker)22_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Fellowship.Walker)",
        "numberOfBytes": "32",
        "value": "t_struct(Walker)22_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Walker)22_storage": {
        "encoding": "inplace",
        "label": "struct Fellowship.Walker",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Status)8"
          },
          {
            "astId": 13,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "date",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "fellowshipIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "balance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "rewardBalance",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "name",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}