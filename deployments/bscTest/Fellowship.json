{
  "address": "0x88547b23Bd5dEf5B363931C23e653dc810E06359",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellor",
          "type": "address"
        },
        {
          "internalType": "address[3]",
          "name": "_initialWalkers",
          "type": "address[3]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "NewWalker",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "NewWalker2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "input",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "output",
          "type": "bytes"
        }
      ],
      "name": "NewWalkerInformation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPerWalker",
          "type": "uint256"
        }
      ],
      "name": "RewardsPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "StakeWithdrawalRequestStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "StakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walker",
          "type": "address"
        }
      ],
      "name": "WalkerBanished",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldWalker",
          "type": "address"
        }
      ],
      "name": "banishWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fellowship",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFellowshipSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        }
      ],
      "name": "getWalkerDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum Fellowship.Status",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_input",
          "type": "bytes32"
        }
      ],
      "name": "getWalkerInformation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_output",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        }
      ],
      "name": "isWalker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_i",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPayDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPayDate2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRivendell",
          "type": "address"
        }
      ],
      "name": "newRivendell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "newWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recieveReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestStakingWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rivendell",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setStakeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_input",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_output",
          "type": "bytes"
        }
      ],
      "name": "setWalkerInformation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_banish",
          "type": "bool"
        }
      ],
      "name": "slashWalker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tellor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walkers",
      "outputs": [
        {
          "internalType": "enum Fellowship.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fellowshipIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardBalance",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa27b9df65a1d0d4bc655b45a96a7bab6cb679b3e12a43fc3620f3792b97d33df",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0e93f23278161bCa6F22D6268ca44691042ed437",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "3362021",
    "logsBloom": "0x
    "blockHash": "0xdfe1d8ce8450d5850ea19b0a2ebf37d6f6db676b64b874c88a6b10a15424b3a3",
    "transactionHash": "0xa27b9df65a1d0d4bc655b45a96a7bab6cb679b3e12a43fc3620f3792b97d33df",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7362344,
        "transactionHash": "0xa27b9df65a1d0d4bc655b45a96a7bab6cb679b3e12a43fc3620f3792b97d33df",
        "address": "0x88547b23Bd5dEf5B363931C23e653dc810E06359",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 0,
        "blockHash": "0xdfe1d8ce8450d5850ea19b0a2ebf37d6f6db676b64b874c88a6b10a15424b3a3"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 7362344,
        "transactionHash": "0xa27b9df65a1d0d4bc655b45a96a7bab6cb679b3e12a43fc3620f3792b97d33df",
        "address": "0x88547b23Bd5dEf5B363931C23e653dc810E06359",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 1,
        "blockHash": "0xdfe1d8ce8450d5850ea19b0a2ebf37d6f6db676b64b874c88a6b10a15424b3a3"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 7362344,
        "transactionHash": "0xa27b9df65a1d0d4bc655b45a96a7bab6cb679b3e12a43fc3620f3792b97d33df",
        "address": "0x88547b23Bd5dEf5B363931C23e653dc810E06359",
        "topics": [
          "0xead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277"
        ],
        "data": "0x000000000000000000000000bf8a66dec65a004b6d89950079b66013a4ac9f0d",
        "logIndex": 2,
        "blockHash": "0xdfe1d8ce8450d5850ea19b0a2ebf37d6f6db676b64b874c88a6b10a15424b3a3"
      }
    ],
    "blockNumber": 7362344,
    "cumulativeGasUsed": "3405863",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
    [
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D",
      "0xBf8a66DeC65A004B6D89950079B66013A4ac9f0D"
    ]
  ],
  "solcInputHash": "e739c41379340f64342ed52ba02da2d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellor\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"_initialWalkers\",\"type\":\"address[3]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"NewWalker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"NewWalker2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"input\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"name\":\"NewWalkerInformation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerWalker\",\"type\":\"uint256\"}],\"name\":\"RewardsPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawalRequestStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walker\",\"type\":\"address\"}],\"name\":\"WalkerBanished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldWalker\",\"type\":\"address\"}],\"name\":\"banishWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fellowship\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFellowshipSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"}],\"name\":\"getWalkerDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum Fellowship.Status\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_input\",\"type\":\"bytes32\"}],\"name\":\"getWalkerInformation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_output\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"isWalker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_i\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPayDate2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRivendell\",\"type\":\"address\"}],\"name\":\"newRivendell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"newWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recieveReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rivendell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_input\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_output\",\"type\":\"bytes\"}],\"name\":\"setWalkerInformation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_banish\",\"type\":\"bool\"}],\"name\":\"slashWalker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tellor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walkers\",\"outputs\":[{\"internalType\":\"enum Fellowship.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fellowshipIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBalance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tellor Inc.\",\"details\":\"This contract holds the selected few chosen as part of the Fellowship*\",\"kind\":\"dev\",\"methods\":{\"banishWalker(address)\":{\"details\":\"Function to banish a walker\",\"params\":{\"_oldWalker\":\"address of walker to be banished (removed from Fellowship)*\"}},\"constructor\":{\"details\":\"Constructor for setting initial variables\",\"params\":{\"_initialWalkers\":\"an array of three addresses to serve as the initial walkers\",\"_tellor\":\"the address of the tellor contract\"}}},\"title\":\"Fellowship\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fellowship.sol\":\"Fellowship\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Fellowship.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"./interfaces/ERC20Interface.sol\\\";\\r\\n\\r\\n/****\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2003\\u2003\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2003\\u2003\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2003\\u2003\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u255a\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u255d\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2003\\u2003\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2554\\u2550\\u2588\\u2588\\u2588\\u2588\\u2551\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2003\\u2003\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\r\\n\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2003\\u2003\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\r\\n\\r\\n*****/\\r\\n\\r\\n/** \\r\\n @author Tellor Inc.\\r\\n @title Fellowship\\r\\n @dev This contract holds the selected few chosen as part of the Fellowship\\r\\n**/\\r\\ncontract Fellowship {\\r\\n    //Storage\\r\\n    enum Status {ACTIVE, INACTIVE, PENDING_WITHDRAW, UNFUNDED}\\r\\n\\r\\n    struct Walker {\\r\\n        Status status; //status of walker\\r\\n        uint256 date; //date the walker initally was chosen\\r\\n        uint256 fellowshipIndex; //index of walker in the fellowship array\\r\\n        uint256 balance; //TRB balance of walker (must be > stakeAmount to be ACTIVE)\\r\\n        uint256 rewardBalance; //balance of rewards they own\\r\\n        string name; //name of walker\\r\\n    }\\r\\n\\r\\n    uint256 public lastPayDate; //most recent date walkers were paid\\r\\n    uint256 public lastPayDate2; //most recent date walkers were paid\\r\\n    uint256 public rewardPool; //sum of all payments for services in contract\\r\\n    uint256 public stakeAmount; //minimum amount each walker needs to stake\\r\\n    address public rivendell; //the address of the voting contract\\r\\n    address public tellor; //address of tellor (the token for staking and payments)\\r\\n\\r\\n    mapping(address => mapping(bytes32 => bytes)) information; //allows parties to store arbitrary information\\r\\n    mapping(address => Walker) public walkers; //a mapping of an address to their information as a Walker\\r\\n    mapping(address => uint256) public payments; //a mapping of an address to the payment amount they've given\\r\\n    //The Fellowship:\\r\\n    address[] public fellowship; //The array of chosen individuals who are part of the fellowship\\r\\n\\r\\n    //Events\\r\\n    event NewWalker2(address walker);\\r\\n    event NewWalker(address walker);\\r\\n    event NewWalkerInformation(address walker, bytes32 input, bytes output);\\r\\n    event WalkerBanished(address walker);\\r\\n    event StakeWithdrawalRequestStarted(address walker);\\r\\n    event StakeWithdrawn(address walker);\\r\\n    event PaymentDeposited(address payee, uint256 amount);\\r\\n    event RewardsPaid(uint256 rewardPerWalker);\\r\\n\\r\\n    //Modifiers\\r\\n    /**\\r\\n     * @dev This modifier restricts the function to only the Rivendell contract\\r\\n     */\\r\\n    modifier onlyRivendell {\\r\\n        require(\\r\\n            msg.sender == rivendell,\\r\\n            \\\"Only rivendell can call this function.\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //Functions\\r\\n    /**\\r\\n     * @dev Constructor for setting initial variables\\r\\n     * @param _tellor the address of the tellor contract\\r\\n     * @param _initialWalkers an array of three addresses to serve as the initial walkers\\r\\n     */\\r\\n    constructor(address _tellor, address[3] memory _initialWalkers) {\\r\\n        tellor = _tellor;\\r\\n        _newWalker(_initialWalkers[0], \\\"Aragorn\\\");\\r\\n        _newWalker(_initialWalkers[1], \\\"Legolas\\\");\\r\\n        _newWalker(_initialWalkers[2], \\\"Gimli\\\");\\r\\n        stakeAmount = 10 ether;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to banish a walker\\r\\n     * @param _oldWalker address of walker to be banished (removed from Fellowship)\\r\\n     **/\\r\\n    function banishWalker(address _oldWalker) external onlyRivendell {\\r\\n        _banishWalker(_oldWalker);\\r\\n        emit WalkerBanished(_oldWalker);\\r\\n    }\\r\\n\\r\\n    function depositPayment(uint256 _amount) external {\\r\\n        payReward();\\r\\n\\r\\n        ERC20Interface(tellor).transferFrom(msg.sender, address(this), _amount);\\r\\n        payments[msg.sender] += _amount;\\r\\n        rewardPool += _amount;\\r\\n        emit PaymentDeposited(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    function depositStake(uint256 _amount) external {\\r\\n        ERC20Interface(tellor).transferFrom(msg.sender, address(this), _amount);\\r\\n        walkers[msg.sender].balance += _amount;\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.INACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.PENDING_WITHDRAW,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        if (walkers[msg.sender].balance >= stakeAmount) {\\r\\n            walkers[msg.sender].status = Status.ACTIVE;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function newRivendell(address _newRivendell) external {\\r\\n        require(\\r\\n            msg.sender == rivendell || rivendell == address(0),\\r\\n            \\\"Only rivendell can call this function.\\\"\\r\\n        );\\r\\n        rivendell = _newRivendell;\\r\\n    }\\r\\n\\r\\n    function newWalker(address _walker, string memory _name)\\r\\n        external\\r\\n        onlyRivendell\\r\\n    {\\r\\n        require(walkers[_walker].date == 0, \\\"cannot already be a walker\\\");\\r\\n        _newWalker(_walker, _name);\\r\\n    }\\r\\n\\r\\n    function payReward() public {\\r\\n        lastPayDate = block.timestamp;\\r\\n\\r\\n        if (rewardPool > 0) {\\r\\n            uint256 timeSinceLastPayment = block.timestamp - lastPayDate;\\r\\n            if (timeSinceLastPayment > 6 * 30 days) {\\r\\n                timeSinceLastPayment = 6 * 30 days;\\r\\n            }\\r\\n            uint256 reward =\\r\\n                (rewardPool * timeSinceLastPayment) /\\r\\n                    6 /\\r\\n                    30 days /\\r\\n                    fellowship.length;\\r\\n            for (uint256 i = 0; i < fellowship.length; i++) {\\r\\n                if (walkers[fellowship[i]].status == Status.ACTIVE) {\\r\\n                    walkers[fellowship[i]].rewardBalance += reward;\\r\\n                    rewardPool -= reward;\\r\\n                }\\r\\n            }\\r\\n            emit RewardsPaid(reward);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //to pay out the reward\\r\\n    function recieveReward() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status == Status.ACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            msg.sender,\\r\\n            walkers[msg.sender].rewardBalance\\r\\n        );\\r\\n        walkers[msg.sender].rewardBalance = 0;\\r\\n    }\\r\\n\\r\\n    function requestStakingWithdraw() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status != Status.INACTIVE,\\r\\n            \\\"Walker has wrong status\\\"\\r\\n        );\\r\\n        walkers[msg.sender].status = Status.PENDING_WITHDRAW;\\r\\n        walkers[msg.sender].date = block.timestamp;\\r\\n        emit StakeWithdrawalRequestStarted(msg.sender);\\r\\n    }\\r\\n\\r\\n    function setStakeAmount(uint256 _amount) external onlyRivendell {\\r\\n        stakeAmount = _amount;\\r\\n        for (uint256 i = 0; i < fellowship.length; i++) {\\r\\n            if (walkers[fellowship[i]].balance < stakeAmount) {\\r\\n                walkers[fellowship[i]].status = Status.UNFUNDED;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //a function to store input about keys on other chains or other necessary details;\\r\\n    function setWalkerInformation(bytes32 _input, bytes memory _output)\\r\\n        external\\r\\n    {\\r\\n        information[msg.sender][_input] = _output;\\r\\n        emit NewWalkerInformation(msg.sender, _input, _output);\\r\\n    }\\r\\n\\r\\n    function slashWalker(\\r\\n        address _walker,\\r\\n        uint256 _amount,\\r\\n        bool _banish\\r\\n    ) external onlyRivendell {\\r\\n        walkers[_walker].balance -= _amount;\\r\\n        rewardPool += _amount;\\r\\n        if (_banish) {\\r\\n            _banishWalker(_walker);\\r\\n        } else if (walkers[_walker].balance < stakeAmount) {\\r\\n            walkers[_walker].status = Status.UNFUNDED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function withdrawStake() external {\\r\\n        require(\\r\\n            walkers[msg.sender].status == Status.PENDING_WITHDRAW,\\r\\n            \\\"walker has wrong status\\\"\\r\\n        );\\r\\n        require(\\r\\n            block.timestamp - walkers[msg.sender].date > 14 days,\\r\\n            \\\"has not been long enough to withdraw\\\"\\r\\n        );\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            msg.sender,\\r\\n            walkers[msg.sender].balance\\r\\n        );\\r\\n        walkers[msg.sender].balance = 0;\\r\\n        _banishWalker(msg.sender);\\r\\n        emit StakeWithdrawn(msg.sender);\\r\\n    }\\r\\n\\r\\n    //view functions\\r\\n\\r\\n    function checkReward() external view returns (uint256) {\\r\\n        uint256 timeSinceLastPayment = block.timestamp - lastPayDate;\\r\\n        if (timeSinceLastPayment > 6 * 30 days) {\\r\\n            timeSinceLastPayment = 6 * 30 days;\\r\\n        }\\r\\n        return ((rewardPool * timeSinceLastPayment) /\\r\\n            6 /\\r\\n            30 days /\\r\\n            fellowship.length);\\r\\n    }\\r\\n\\r\\n    function getFellowshipSize() external view returns (uint256) {\\r\\n        return fellowship.length;\\r\\n    }\\r\\n\\r\\n    function getWalkerDetails(address _walker)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            Status,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            string memory\\r\\n        )\\r\\n    {\\r\\n        return (\\r\\n            walkers[_walker].date,\\r\\n            walkers[_walker].fellowshipIndex,\\r\\n            walkers[_walker].status,\\r\\n            walkers[_walker].balance,\\r\\n            walkers[_walker].rewardBalance,\\r\\n            walkers[_walker].name\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getWalkerInformation(address _walker, bytes32 _input)\\r\\n        external\\r\\n        view\\r\\n        returns (bytes memory _output)\\r\\n    {\\r\\n        return information[_walker][_input];\\r\\n    }\\r\\n\\r\\n    //checks whether they are a Walker\\r\\n    function isWalker(address _a) external view returns (bool _i) {\\r\\n        if (walkers[_a].status == Status.ACTIVE) {\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _banishWalker(address _oldWalker) internal {\\r\\n        fellowship[walkers[_oldWalker].fellowshipIndex] = fellowship[\\r\\n            fellowship.length - 1\\r\\n        ];\\r\\n        walkers[fellowship[fellowship.length - 1]].fellowshipIndex = walkers[\\r\\n            _oldWalker\\r\\n        ]\\r\\n            .fellowshipIndex;\\r\\n        fellowship.pop();\\r\\n        walkers[_oldWalker].fellowshipIndex = 0;\\r\\n        walkers[_oldWalker].status = Status.INACTIVE;\\r\\n        ERC20Interface(tellor).transfer(\\r\\n            _oldWalker,\\r\\n            walkers[_oldWalker].balance\\r\\n        );\\r\\n        walkers[_oldWalker].balance = 0;\\r\\n        rewardPool += walkers[_oldWalker].rewardBalance;\\r\\n        walkers[_oldWalker].rewardBalance = 0;\\r\\n    }\\r\\n\\r\\n    function _newWalker(address _walker, string memory _name) internal {\\r\\n        fellowship.push(_walker);\\r\\n        walkers[_walker] = Walker({\\r\\n            date: block.timestamp,\\r\\n            name: _name,\\r\\n            status: Status.UNFUNDED,\\r\\n            fellowshipIndex: fellowship.length - 1,\\r\\n            balance: 0,\\r\\n            rewardBalance: 0\\r\\n        });\\r\\n        emit NewWalker(_walker);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x75fc638088e55018e2531af6f9182e2afcbc834b9aa87fa5701c364afc25701f\",\"license\":\"MIT\"},\"contracts/interfaces/ERC20Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface ERC20Interface {\\r\\n    function transfer(address _to, uint256 _amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function balanceOf(address _addy) external returns (uint256);\\r\\n\\r\\n    function balanceOfAt(address _addy, uint256 _block)\\r\\n        external\\r\\n        returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x6ead1529e4c3481c68f30021e0b18ccf864217db0a0fb1f44cb608467e51fd23\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003ef438038062003ef4833981810160405281019062000037919062000579565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000fe81600060038110620000b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600781526020017f417261676f726e000000000000000000000000000000000000000000000000008152506200022160201b60201c565b62000184816001600381106200013d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600781526020017f4c65676f6c6173000000000000000000000000000000000000000000000000008152506200022160201b60201c565b6200020a81600260038110620001c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518060400160405280600581526020017f47696d6c690000000000000000000000000000000000000000000000000000008152506200022160201b60201c565b678ac7230489e8000060038190555050506200079b565b6009829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c00160405280600380811115620002c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020014281526020016001600980549050620002e8919062000645565b8152602001600081526020016000815260200182815250600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600381111562000390577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005019080519060200190620003db9291906200041c565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c77727782604051620004109190620005cb565b60405180910390a15050565b8280546200042a90620006be565b90600052602060002090601f0160209004810192826200044e57600085556200049a565b82601f106200046957805160ff19168380011785556200049a565b828001600101855582156200049a579182015b82811115620004995782518255916020019190600101906200047c565b5b509050620004a99190620004ad565b5090565b5b80821115620004c8576000816000905550600101620004ae565b5090565b6000620004e3620004dd846200061c565b620005e8565b90508082856020860282011115620004fa57600080fd5b60005b858110156200052e578162000513888262000538565b845260208401935060208301925050600181019050620004fd565b5050509392505050565b600081519050620005498162000781565b92915050565b600082601f8301126200056157600080fd5b600362000570848285620004cc565b91505092915050565b600080608083850312156200058d57600080fd5b60006200059d8582860162000538565b9250506020620005b0858286016200054f565b9150509250929050565b620005c58162000680565b82525050565b6000602082019050620005e26000830184620005ba565b92915050565b6000604051905081810181811067ffffffffffffffff8211171562000612576200061162000752565b5b8060405250919050565b600067ffffffffffffffff8211156200063a576200063962000752565b5b602082029050919050565b60006200065282620006b4565b91506200065f83620006b4565b925082821015620006755762000674620006f4565b5b828203905092915050565b60006200068d8262000694565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620006d757607f821691505b60208210811415620006ee57620006ed62000723565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200078c8162000680565b81146200079857600080fd5b50565b61374980620007ab6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636c7575ae116100de578063c4b24a4611610097578063d78b0c1111610071578063d78b0c111461043f578063e2982c211461045d578063e2a9cb601461048d578063f807c468146104ab5761018e565b8063c4b24a46146103e9578063c7e061bb14610407578063cb82cc8f146104235761018e565b80636c7575ae14610336578063751d0334146103545780637842a3a41461038457806379a4ab511461038e578063abf4f44a146103aa578063bed9d861146103df5761018e565b80633bc3f5de1161014b5780634df260d7116101255780634df260d7146102ae57806360c7dc47146102de57806366666aa9146102fc5780636b749c471461031a5761018e565b80633bc3f5de146102585780633d9a7fdb1461027657806343808c50146102925761018e565b806311bd8100146101935780631959ad5b146101af5780631bb6e2cd146101cd5780631cc29e19146101fd578063217db0a41461021957806328449c3a1461024e575b600080fd5b6101ad60048036038101906101a89190612c82565b6104b5565b005b6101b76105d8565b6040516101c49190613014565b60405180910390f35b6101e760048036038101906101e29190612da2565b6105fe565b6040516101f49190613014565b60405180910390f35b61021760048036038101906102129190612c1d565b61063d565b005b610233600480360381019061022e9190612c1d565b61076a565b6040516102459695949392919061310a565b60405180910390f35b61025661083b565b005b610260610a4f565b60405161026d9190613212565b60405180910390f35b610290600480360381019061028b9190612c1d565b610a55565b005b6102ac60048036038101906102a79190612da2565b610b28565b005b6102c860048036038101906102c39190612c1d565b610d8c565b6040516102d591906130cd565b60405180910390f35b6102e6610e68565b6040516102f39190613212565b60405180910390f35b610304610e6e565b6040516103119190613212565b60405180910390f35b610334600480360381019061032f9190612da2565b610e74565b005b61033e610fd9565b60405161034b9190613212565b60405180910390f35b61036e60048036038101906103699190612c46565b610fe6565b60405161037b91906130e8565b60405180910390f35b61038c6110c9565b005b6103a860048036038101906103a39190612d4e565b61139d565b005b6103c460048036038101906103bf9190612c1d565b611441565b6040516103d69695949392919061322d565b60405180910390f35b6103e761168a565b005b6103f161199a565b6040516103fe9190613212565b60405180910390f35b610421600480360381019061041c9190612cd6565b6119fd565b005b61043d60048036038101906104389190612da2565b611bf7565b005b610447611fe8565b6040516104549190613212565b60405180910390f35b61047760048036038101906104729190612c1d565b611fee565b6040516104849190613212565b60405180910390f35b610495612006565b6040516104a29190613014565b60405180910390f35b6104b361202c565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90613192565b60405180910390fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c1906131b2565b60405180910390fd5b6105d4828261226a565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009818154811061060e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106e75750600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90613192565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050180546107b89061352c565b80601f01602080910402602001604051908101604052809291908181526020018280546107e49061352c565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905086565b60016003811115610875577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156108fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906131f2565b60405180910390fd5b6002600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156109ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fb2e7a03df6688eb07f16c7d4b5416e395e6cd65e5deea1dbbaefd239ace537d033604051610a459190613014565b60405180910390a1565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90613192565b60405180910390fd5b610aee8161245d565b7fac76dcc3aa3f5c914cd11efd9783db7b9f5522ad811eca79bbe2d719bb74788a81604051610b1d9190613014565b60405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90613192565b60405180910390fd5b8060038190555060005b600980549050811015610d88576003546007600060098481548110610c10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015610d755760036007600060098481548110610cbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b8080610d809061355e565b915050610bc2565b5050565b6000806003811115610dc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610e5e5760019050610e63565b600090505b919050565b60035481565b60025481565b610e7c6110c9565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610edb9392919061302f565b602060405180830381600087803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d9190612d25565b5080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7d919061335e565b925050819055508060026000828254610f96919061335e565b925050819055507fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd453382604051610fce9291906130a4565b60405180910390a150565b6000600980549050905090565b6060600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002080546110439061352c565b80601f016020809104026020016040519081016040528092919081815260200182805461106f9061352c565b80156110bc5780601f10611091576101008083540402835291602001916110bc565b820191906000526020600020905b81548152906001019060200180831161109f57829003601f168201915b5050505050905092915050565b426000819055506000600254111561139b5760008054426110ea919061343f565b905062ed4e008111156110fe5762ed4e0090505b600060098054905062278d0060068460025461111a91906133e5565b61112491906133b4565b61112e91906133b4565b61113891906133b4565b905060005b6009805490508110156113605760006003811115611184577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60076000600984815481106111c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611270577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561134d578160076000600984815481106112b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461132c919061335e565b925050819055508160026000828254611345919061343f565b925050819055505b80806113589061355e565b91505061113d565b507fb0c65a5b323022d926c456e1564d86f0bda40160a781c820f571d7635b348801816040516113909190613212565b60405180910390a150505b565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090805190602001906114019291906129bb565b507f3c4a87d301ea6075e9b1efeee0b9d746feffe2294183c22a12e845df3e3a8edf33838360405161143593929190613066565b60405180910390a15050565b60008060008060006060600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600760008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018080546115f59061352c565b80601f01602080910402602001604051908101604052809291908181526020018280546116219061352c565b801561166e5780601f106116435761010080835404028352916020019161166e565b820191906000526020600020905b81548152906001019060200180831161165157829003601f168201915b5050505050905095509550955095509550955091939550919395565b600260038111156116c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561174c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461178c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178390613172565b60405180910390fd5b62127500600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117de919061343f565b1161181e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611815906131d2565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b81526004016118bd9291906130a4565b602060405180830381600087803b1580156118d757600080fd5b505af11580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190612d25565b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506119613361245d565b7f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec336040516119909190613014565b60405180910390a1565b600080600054426119ab919061343f565b905062ed4e008111156119bf5762ed4e0090505b60098054905062278d006006836002546119d991906133e5565b6119e391906133b4565b6119ed91906133b4565b6119f791906133b4565b91505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8490613192565b60405180910390fd5b81600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611adf919061343f565b925050819055508160026000828254611af8919061335e565b925050819055508015611b1357611b0e8361245d565b611bf2565b600354600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015611bf1576003600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611beb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611c569392919061302f565b602060405180830381600087803b158015611c7057600080fd5b505af1158015611c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca89190612d25565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611cfb919061335e565b9250508190555060016003811115611d3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfc906131f2565b60405180910390fd5b60026003811115611e3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611ec7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611f08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eff906131f2565b60405180910390fd5b600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015410611fe5576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611fdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b60015481565b60086020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003811115612066577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156120ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461212e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612125906131f2565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040518363ffffffff1660e01b81526004016121cd9291906130a4565b602060405180830381600087803b1580156121e757600080fd5b505af11580156121fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221f9190612d25565b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550565b6009829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c00160405280600380811115612311577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001428152602001600160098054905061232e919061343f565b8152602001600081526020016000815260200182815250600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360038111156123d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501908051906020019061241e929190612a41565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277826040516124519190613014565b60405180910390a15050565b60096001600980549050612471919061343f565b815481106124a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201548154811061254f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460076000600960016009805490506125f2919061343f565b81548110612629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060098054806126cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156127d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b815260040161287a9291906130a4565b602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc9190612d25565b506000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015460026000828254612969919061335e565b925050819055506000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555050565b8280546129c79061352c565b90600052602060002090601f0160209004810192826129e95760008555612a30565b82601f10612a0257805160ff1916838001178555612a30565b82800160010185558215612a30579182015b82811115612a2f578251825591602001919060010190612a14565b5b509050612a3d9190612ac7565b5090565b828054612a4d9061352c565b90600052602060002090601f016020900481019282612a6f5760008555612ab6565b82601f10612a8857805160ff1916838001178555612ab6565b82800160010185558215612ab6579182015b82811115612ab5578251825591602001919060010190612a9a565b5b509050612ac39190612ac7565b5090565b5b80821115612ae0576000816000905550600101612ac8565b5090565b6000612af7612af2846132c6565b613295565b905082815260208101848484011115612b0f57600080fd5b612b1a8482856134ea565b509392505050565b6000612b35612b30846132f6565b613295565b905082815260208101848484011115612b4d57600080fd5b612b588482856134ea565b509392505050565b600081359050612b6f816136b7565b92915050565b600081359050612b84816136ce565b92915050565b600081519050612b99816136ce565b92915050565b600081359050612bae816136e5565b92915050565b600082601f830112612bc557600080fd5b8135612bd5848260208601612ae4565b91505092915050565b600082601f830112612bef57600080fd5b8135612bff848260208601612b22565b91505092915050565b600081359050612c17816136fc565b92915050565b600060208284031215612c2f57600080fd5b6000612c3d84828501612b60565b91505092915050565b60008060408385031215612c5957600080fd5b6000612c6785828601612b60565b9250506020612c7885828601612b9f565b9150509250929050565b60008060408385031215612c9557600080fd5b6000612ca385828601612b60565b925050602083013567ffffffffffffffff811115612cc057600080fd5b612ccc85828601612bde565b9150509250929050565b600080600060608486031215612ceb57600080fd5b6000612cf986828701612b60565b9350506020612d0a86828701612c08565b9250506040612d1b86828701612b75565b9150509250925092565b600060208284031215612d3757600080fd5b6000612d4584828501612b8a565b91505092915050565b60008060408385031215612d6157600080fd5b6000612d6f85828601612b9f565b925050602083013567ffffffffffffffff811115612d8c57600080fd5b612d9885828601612bb4565b9150509250929050565b600060208284031215612db457600080fd5b6000612dc284828501612c08565b91505092915050565b612dd481613473565b82525050565b612de381613485565b82525050565b612df281613491565b82525050565b6000612e0382613326565b612e0d818561333c565b9350612e1d8185602086016134f9565b612e2681613692565b840191505092915050565b612e3a816134d8565b82525050565b6000612e4b82613331565b612e55818561334d565b9350612e658185602086016134f9565b612e6e81613692565b840191505092915050565b6000612e8660178361334d565b91507f77616c6b6572206861732077726f6e67207374617475730000000000000000006000830152602082019050919050565b6000612ec660268361334d565b91507f4f6e6c7920726976656e64616c652063616e2063616c6c20746869732066756e60008301527f6374696f6e2e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f2c601a8361334d565b91507f63616e6e6f7420616c726561647920626520612077616c6b65720000000000006000830152602082019050919050565b6000612f6c60248361334d565b91507f686173206e6f74206265656e206c6f6e6720656e6f75676820746f207769746860008301527f64726177000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fd260178361334d565b91507f57616c6b6572206861732077726f6e67207374617475730000000000000000006000830152602082019050919050565b61300e816134ce565b82525050565b60006020820190506130296000830184612dcb565b92915050565b60006060820190506130446000830186612dcb565b6130516020830185612dcb565b61305e6040830184613005565b949350505050565b600060608201905061307b6000830186612dcb565b6130886020830185612de9565b818103604083015261309a8184612df8565b9050949350505050565b60006040820190506130b96000830185612dcb565b6130c66020830184613005565b9392505050565b60006020820190506130e26000830184612dda565b92915050565b600060208201905081810360008301526131028184612df8565b905092915050565b600060c08201905061311f6000830189612e31565b61312c6020830188613005565b6131396040830187613005565b6131466060830186613005565b6131536080830185613005565b81810360a08301526131658184612e40565b9050979650505050505050565b6000602082019050818103600083015261318b81612e79565b9050919050565b600060208201905081810360008301526131ab81612eb9565b9050919050565b600060208201905081810360008301526131cb81612f1f565b9050919050565b600060208201905081810360008301526131eb81612f5f565b9050919050565b6000602082019050818103600083015261320b81612fc5565b9050919050565b60006020820190506132276000830184613005565b92915050565b600060c0820190506132426000830189613005565b61324f6020830188613005565b61325c6040830187612e31565b6132696060830186613005565b6132766080830185613005565b81810360a08301526132888184612e40565b9050979650505050505050565b6000604051905081810181811067ffffffffffffffff821117156132bc576132bb613663565b5b8060405250919050565b600067ffffffffffffffff8211156132e1576132e0613663565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561331157613310613663565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613369826134ce565b9150613374836134ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156133a9576133a86135a7565b5b828201905092915050565b60006133bf826134ce565b91506133ca836134ce565b9250826133da576133d96135d6565b5b828204905092915050565b60006133f0826134ce565b91506133fb836134ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613434576134336135a7565b5b828202905092915050565b600061344a826134ce565b9150613455836134ce565b925082821015613468576134676135a7565b5b828203905092915050565b600061347e826134ae565b9050919050565b60008115159050919050565b6000819050919050565b60008190506134a9826136a3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006134e38261349b565b9050919050565b82818337600083830152505050565b60005b838110156135175780820151818401526020810190506134fc565b83811115613526576000848401525b50505050565b6000600282049050600182168061354457607f821691505b6020821081141561355857613557613634565b5b50919050565b6000613569826134ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561359c5761359b6135a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600481106136b4576136b3613605565b5b50565b6136c081613473565b81146136cb57600080fd5b50565b6136d781613485565b81146136e257600080fd5b50565b6136ee81613491565b81146136f957600080fd5b50565b613705816134ce565b811461371057600080fd5b5056fea26469706673582212207f2c4c14567e7f9fad654504a2061ac85272eac3f07baf68fa983b179ed9cdc464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80636c7575ae116100de578063c4b24a4611610097578063d78b0c1111610071578063d78b0c111461043f578063e2982c211461045d578063e2a9cb601461048d578063f807c468146104ab5761018e565b8063c4b24a46146103e9578063c7e061bb14610407578063cb82cc8f146104235761018e565b80636c7575ae14610336578063751d0334146103545780637842a3a41461038457806379a4ab511461038e578063abf4f44a146103aa578063bed9d861146103df5761018e565b80633bc3f5de1161014b5780634df260d7116101255780634df260d7146102ae57806360c7dc47146102de57806366666aa9146102fc5780636b749c471461031a5761018e565b80633bc3f5de146102585780633d9a7fdb1461027657806343808c50146102925761018e565b806311bd8100146101935780631959ad5b146101af5780631bb6e2cd146101cd5780631cc29e19146101fd578063217db0a41461021957806328449c3a1461024e575b600080fd5b6101ad60048036038101906101a89190612c82565b6104b5565b005b6101b76105d8565b6040516101c49190613014565b60405180910390f35b6101e760048036038101906101e29190612da2565b6105fe565b6040516101f49190613014565b60405180910390f35b61021760048036038101906102129190612c1d565b61063d565b005b610233600480360381019061022e9190612c1d565b61076a565b6040516102459695949392919061310a565b60405180910390f35b61025661083b565b005b610260610a4f565b60405161026d9190613212565b60405180910390f35b610290600480360381019061028b9190612c1d565b610a55565b005b6102ac60048036038101906102a79190612da2565b610b28565b005b6102c860048036038101906102c39190612c1d565b610d8c565b6040516102d591906130cd565b60405180910390f35b6102e6610e68565b6040516102f39190613212565b60405180910390f35b610304610e6e565b6040516103119190613212565b60405180910390f35b610334600480360381019061032f9190612da2565b610e74565b005b61033e610fd9565b60405161034b9190613212565b60405180910390f35b61036e60048036038101906103699190612c46565b610fe6565b60405161037b91906130e8565b60405180910390f35b61038c6110c9565b005b6103a860048036038101906103a39190612d4e565b61139d565b005b6103c460048036038101906103bf9190612c1d565b611441565b6040516103d69695949392919061322d565b60405180910390f35b6103e761168a565b005b6103f161199a565b6040516103fe9190613212565b60405180910390f35b610421600480360381019061041c9190612cd6565b6119fd565b005b61043d60048036038101906104389190612da2565b611bf7565b005b610447611fe8565b6040516104549190613212565b60405180910390f35b61047760048036038101906104729190612c1d565b611fee565b6040516104849190613212565b60405180910390f35b610495612006565b6040516104a29190613014565b60405180910390f35b6104b361202c565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90613192565b60405180910390fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c1906131b2565b60405180910390fd5b6105d4828261226a565b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009818154811061060e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106e75750600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90613192565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050180546107b89061352c565b80601f01602080910402602001604051908101604052809291908181526020018280546107e49061352c565b80156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905086565b60016003811115610875577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156108fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906131f2565b60405180910390fd5b6002600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156109ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fb2e7a03df6688eb07f16c7d4b5416e395e6cd65e5deea1dbbaefd239ace537d033604051610a459190613014565b60405180910390a1565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90613192565b60405180910390fd5b610aee8161245d565b7fac76dcc3aa3f5c914cd11efd9783db7b9f5522ad811eca79bbe2d719bb74788a81604051610b1d9190613014565b60405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90613192565b60405180910390fd5b8060038190555060005b600980549050811015610d88576003546007600060098481548110610c10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015610d755760036007600060098481548110610cbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b8080610d809061355e565b915050610bc2565b5050565b6000806003811115610dc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610e5e5760019050610e63565b600090505b919050565b60035481565b60025481565b610e7c6110c9565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610edb9392919061302f565b602060405180830381600087803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d9190612d25565b5080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7d919061335e565b925050819055508060026000828254610f96919061335e565b925050819055507fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd453382604051610fce9291906130a4565b60405180910390a150565b6000600980549050905090565b6060600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002080546110439061352c565b80601f016020809104026020016040519081016040528092919081815260200182805461106f9061352c565b80156110bc5780601f10611091576101008083540402835291602001916110bc565b820191906000526020600020905b81548152906001019060200180831161109f57829003601f168201915b5050505050905092915050565b426000819055506000600254111561139b5760008054426110ea919061343f565b905062ed4e008111156110fe5762ed4e0090505b600060098054905062278d0060068460025461111a91906133e5565b61112491906133b4565b61112e91906133b4565b61113891906133b4565b905060005b6009805490508110156113605760006003811115611184577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60076000600984815481106111c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611270577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561134d578160076000600984815481106112b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461132c919061335e565b925050819055508160026000828254611345919061343f565b925050819055505b80806113589061355e565b91505061113d565b507fb0c65a5b323022d926c456e1564d86f0bda40160a781c820f571d7635b348801816040516113909190613212565b60405180910390a150505b565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090805190602001906114019291906129bb565b507f3c4a87d301ea6075e9b1efeee0b9d746feffe2294183c22a12e845df3e3a8edf33838360405161143593929190613066565b60405180910390a15050565b60008060008060006060600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600760008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018080546115f59061352c565b80601f01602080910402602001604051908101604052809291908181526020018280546116219061352c565b801561166e5780601f106116435761010080835404028352916020019161166e565b820191906000526020600020905b81548152906001019060200180831161165157829003601f168201915b5050505050905095509550955095509550955091939550919395565b600260038111156116c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561174c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461178c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178390613172565b60405180910390fd5b62127500600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117de919061343f565b1161181e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611815906131d2565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b81526004016118bd9291906130a4565b602060405180830381600087803b1580156118d757600080fd5b505af11580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190612d25565b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506119613361245d565b7f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec336040516119909190613014565b60405180910390a1565b600080600054426119ab919061343f565b905062ed4e008111156119bf5762ed4e0090505b60098054905062278d006006836002546119d991906133e5565b6119e391906133b4565b6119ed91906133b4565b6119f791906133b4565b91505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8490613192565b60405180910390fd5b81600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611adf919061343f565b925050819055508160026000828254611af8919061335e565b925050819055508015611b1357611b0e8361245d565b611bf2565b600354600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541015611bf1576003600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611beb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611c569392919061302f565b602060405180830381600087803b158015611c7057600080fd5b505af1158015611c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca89190612d25565b5080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254611cfb919061335e565b9250508190555060016003811115611d3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfc906131f2565b60405180910390fd5b60026003811115611e3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115611ec7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611f08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eff906131f2565b60405180910390fd5b600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015410611fe5576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611fdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b60015481565b60086020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003811115612066577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156120ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461212e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612125906131f2565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040518363ffffffff1660e01b81526004016121cd9291906130a4565b602060405180830381600087803b1580156121e757600080fd5b505af11580156121fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221f9190612d25565b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550565b6009829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c00160405280600380811115612311577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001428152602001600160098054905061232e919061343f565b8152602001600081526020016000815260200182815250600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360038111156123d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501908051906020019061241e929190612a41565b509050507fead7e53082360d92e83a064e3ece44b1e729404ce32d71befd18587c6c777277826040516124519190613014565b60405180910390a15050565b60096001600980549050612471919061343f565b815481106124a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201548154811061254f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460076000600960016009805490506125f2919061343f565b81548110612629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060098054806126cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156127d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b815260040161287a9291906130a4565b602060405180830381600087803b15801561289457600080fd5b505af11580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc9190612d25565b506000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015460026000828254612969919061335e565b925050819055506000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555050565b8280546129c79061352c565b90600052602060002090601f0160209004810192826129e95760008555612a30565b82601f10612a0257805160ff1916838001178555612a30565b82800160010185558215612a30579182015b82811115612a2f578251825591602001919060010190612a14565b5b509050612a3d9190612ac7565b5090565b828054612a4d9061352c565b90600052602060002090601f016020900481019282612a6f5760008555612ab6565b82601f10612a8857805160ff1916838001178555612ab6565b82800160010185558215612ab6579182015b82811115612ab5578251825591602001919060010190612a9a565b5b509050612ac39190612ac7565b5090565b5b80821115612ae0576000816000905550600101612ac8565b5090565b6000612af7612af2846132c6565b613295565b905082815260208101848484011115612b0f57600080fd5b612b1a8482856134ea565b509392505050565b6000612b35612b30846132f6565b613295565b905082815260208101848484011115612b4d57600080fd5b612b588482856134ea565b509392505050565b600081359050612b6f816136b7565b92915050565b600081359050612b84816136ce565b92915050565b600081519050612b99816136ce565b92915050565b600081359050612bae816136e5565b92915050565b600082601f830112612bc557600080fd5b8135612bd5848260208601612ae4565b91505092915050565b600082601f830112612bef57600080fd5b8135612bff848260208601612b22565b91505092915050565b600081359050612c17816136fc565b92915050565b600060208284031215612c2f57600080fd5b6000612c3d84828501612b60565b91505092915050565b60008060408385031215612c5957600080fd5b6000612c6785828601612b60565b9250506020612c7885828601612b9f565b9150509250929050565b60008060408385031215612c9557600080fd5b6000612ca385828601612b60565b925050602083013567ffffffffffffffff811115612cc057600080fd5b612ccc85828601612bde565b9150509250929050565b600080600060608486031215612ceb57600080fd5b6000612cf986828701612b60565b9350506020612d0a86828701612c08565b9250506040612d1b86828701612b75565b9150509250925092565b600060208284031215612d3757600080fd5b6000612d4584828501612b8a565b91505092915050565b60008060408385031215612d6157600080fd5b6000612d6f85828601612b9f565b925050602083013567ffffffffffffffff811115612d8c57600080fd5b612d9885828601612bb4565b9150509250929050565b600060208284031215612db457600080fd5b6000612dc284828501612c08565b91505092915050565b612dd481613473565b82525050565b612de381613485565b82525050565b612df281613491565b82525050565b6000612e0382613326565b612e0d818561333c565b9350612e1d8185602086016134f9565b612e2681613692565b840191505092915050565b612e3a816134d8565b82525050565b6000612e4b82613331565b612e55818561334d565b9350612e658185602086016134f9565b612e6e81613692565b840191505092915050565b6000612e8660178361334d565b91507f77616c6b6572206861732077726f6e67207374617475730000000000000000006000830152602082019050919050565b6000612ec660268361334d565b91507f4f6e6c7920726976656e64616c652063616e2063616c6c20746869732066756e60008301527f6374696f6e2e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f2c601a8361334d565b91507f63616e6e6f7420616c726561647920626520612077616c6b65720000000000006000830152602082019050919050565b6000612f6c60248361334d565b91507f686173206e6f74206265656e206c6f6e6720656e6f75676820746f207769746860008301527f64726177000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fd260178361334d565b91507f57616c6b6572206861732077726f6e67207374617475730000000000000000006000830152602082019050919050565b61300e816134ce565b82525050565b60006020820190506130296000830184612dcb565b92915050565b60006060820190506130446000830186612dcb565b6130516020830185612dcb565b61305e6040830184613005565b949350505050565b600060608201905061307b6000830186612dcb565b6130886020830185612de9565b818103604083015261309a8184612df8565b9050949350505050565b60006040820190506130b96000830185612dcb565b6130c66020830184613005565b9392505050565b60006020820190506130e26000830184612dda565b92915050565b600060208201905081810360008301526131028184612df8565b905092915050565b600060c08201905061311f6000830189612e31565b61312c6020830188613005565b6131396040830187613005565b6131466060830186613005565b6131536080830185613005565b81810360a08301526131658184612e40565b9050979650505050505050565b6000602082019050818103600083015261318b81612e79565b9050919050565b600060208201905081810360008301526131ab81612eb9565b9050919050565b600060208201905081810360008301526131cb81612f1f565b9050919050565b600060208201905081810360008301526131eb81612f5f565b9050919050565b6000602082019050818103600083015261320b81612fc5565b9050919050565b60006020820190506132276000830184613005565b92915050565b600060c0820190506132426000830189613005565b61324f6020830188613005565b61325c6040830187612e31565b6132696060830186613005565b6132766080830185613005565b81810360a08301526132888184612e40565b9050979650505050505050565b6000604051905081810181811067ffffffffffffffff821117156132bc576132bb613663565b5b8060405250919050565b600067ffffffffffffffff8211156132e1576132e0613663565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561331157613310613663565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613369826134ce565b9150613374836134ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156133a9576133a86135a7565b5b828201905092915050565b60006133bf826134ce565b91506133ca836134ce565b9250826133da576133d96135d6565b5b828204905092915050565b60006133f0826134ce565b91506133fb836134ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613434576134336135a7565b5b828202905092915050565b600061344a826134ce565b9150613455836134ce565b925082821015613468576134676135a7565b5b828203905092915050565b600061347e826134ae565b9050919050565b60008115159050919050565b6000819050919050565b60008190506134a9826136a3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006134e38261349b565b9050919050565b82818337600083830152505050565b60005b838110156135175780820151818401526020810190506134fc565b83811115613526576000848401525b50505050565b6000600282049050600182168061354457607f821691505b6020821081141561355857613557613634565b5b50919050565b6000613569826134ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561359c5761359b6135a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600481106136b4576136b3613605565b5b50565b6136c081613473565b81146136cb57600080fd5b50565b6136d781613485565b81146136e257600080fd5b50565b6136ee81613491565b81146136f957600080fd5b50565b613705816134ce565b811461371057600080fd5b5056fea26469706673582212207f2c4c14567e7f9fad654504a2061ac85272eac3f07baf68fa983b179ed9cdc464736f6c63430008000033",
  "devdoc": {
    "author": "Tellor Inc.",
    "details": "This contract holds the selected few chosen as part of the Fellowship*",
    "kind": "dev",
    "methods": {
      "banishWalker(address)": {
        "details": "Function to banish a walker",
        "params": {
          "_oldWalker": "address of walker to be banished (removed from Fellowship)*"
        }
      },
      "constructor": {
        "details": "Constructor for setting initial variables",
        "params": {
          "_initialWalkers": "an array of three addresses to serve as the initial walkers",
          "_tellor": "the address of the tellor contract"
        }
      }
    },
    "title": "Fellowship",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "lastPayDate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 26,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "lastPayDate2",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 28,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "rewardPool",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "stakeAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "rivendell",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 34,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "tellor",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 40,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "information",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))"
      },
      {
        "astId": 45,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "walkers",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(Walker)22_storage)"
      },
      {
        "astId": 49,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "payments",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 52,
        "contract": "contracts/Fellowship.sol:Fellowship",
        "label": "fellowship",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Status)8": {
        "encoding": "inplace",
        "label": "enum Fellowship.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes_storage)"
      },
      "t_mapping(t_address,t_struct(Walker)22_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Fellowship.Walker)",
        "numberOfBytes": "32",
        "value": "t_struct(Walker)22_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Walker)22_storage": {
        "encoding": "inplace",
        "label": "struct Fellowship.Walker",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Status)8"
          },
          {
            "astId": 13,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "date",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "fellowshipIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "balance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "rewardBalance",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/Fellowship.sol:Fellowship",
            "label": "name",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}